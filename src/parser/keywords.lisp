;;;
;;; Oracle PL/SQL quick parser
;;;

(in-package #:plconvert.parser)

(defmacro def-keyword-rule (keyword)
  (let ((rule-name (read-from-string (format nil "kw-~a" keyword)))
	(constant  (read-from-string (format nil ":~a" keyword))))
    `(defrule ,rule-name (and ignore-whitespace (~ ,keyword) ignore-whitespace)
       (:constant ',constant))))

(eval-when (:load-toplevel :compile-toplevel :execute)
  (def-keyword-rule "create")
  (def-keyword-rule "or")
  (def-keyword-rule "and")
  (def-keyword-rule "not")
  (def-keyword-rule "replace")
  (def-keyword-rule "package")
  (def-keyword-rule "body")
  (def-keyword-rule "as")
  (def-keyword-rule "function")
  (def-keyword-rule "procedure")
  (def-keyword-rule "declare")
  (def-keyword-rule "constant")
  (def-keyword-rule "default")
  (def-keyword-rule "type")
  (def-keyword-rule "record")
  (def-keyword-rule "table")
  (def-keyword-rule "return")
  (def-keyword-rule "raise")
  (def-keyword-rule "is")
  (def-keyword-rule "not")
  (def-keyword-rule "like")
  (def-keyword-rule "null")
  (def-keyword-rule "if")
  (def-keyword-rule "then")
  (def-keyword-rule "else")
  (def-keyword-rule "elsif")
  (def-keyword-rule "with")
  (def-keyword-rule "select")
  (def-keyword-rule "insert")
  (def-keyword-rule "update")
  (def-keyword-rule "delete")
  (def-keyword-rule "commit")
  (def-keyword-rule "rollback")
  (def-keyword-rule "exception")
  (def-keyword-rule "when")
  (def-keyword-rule "ref")
  (def-keyword-rule "cursor")
  (def-keyword-rule "open")
  (def-keyword-rule "fetch")
  (def-keyword-rule "close")
  (def-keyword-rule "bulk")
  (def-keyword-rule "collect")
  (def-keyword-rule "into")
  (def-keyword-rule "for")
  (def-keyword-rule "forall")
  (def-keyword-rule "continue")
  (def-keyword-rule "index")
  (def-keyword-rule "exit")
  (def-keyword-rule "of")
  (def-keyword-rule "by")
  (def-keyword-rule "in")
  (def-keyword-rule "out")
  (def-keyword-rule "loop")
  (def-keyword-rule "case")
  (def-keyword-rule "begin")
  (def-keyword-rule "end")
  (def-keyword-rule "nocopy")
  (def-keyword-rule "pragma")
  (def-keyword-rule "subtype")
  (def-keyword-rule "result_cache")
  (def-keyword-rule "relies_on"))
